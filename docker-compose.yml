services:

  shiny-proxy:
    image: openanalytics/shinyproxy:3.1.0
    restart: on-failure
    networks:
      - bb-net
    expose:
      - "8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      # We go straight from shinyproxy image, hence have to map in our config
      # at runtime
      - ./services/shiny-proxy/application.yml:/opt/shinyproxy/application.yml
      # This injection is needed for local development, where I'm testing out
      # shiny proxy in docker stack
      - ./.Renviron:/opt/shinyproxy/env.txt
    user: root
    environment:
      # APP_IMAGE is defined in ec2-startup.sh based on git commit SHA. Locally
      # it's defined as ghcr.io/crew102/bb-app:latest in .bashrc
      APP_IMAGE: "${APP_IMAGE}"

  nginx:
    build: ./services/nginx
    restart: always
    networks:
      - bb-net
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./services/nginx/logs:/nginx/logs
      - ./services/nginx/landing:/www/landing
      # This file is manipulated in ec2-startup.sh to reflect the environment
      # (host) that should be used, hence have to map into container.
      - ./services/nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - shiny-proxy

  daily-update-cron:
    image: "${APP_IMAGE}"
    restart: always
    networks:
      - bb-net
    command: ["/bin/bash", "-c", "cron && tail -f /var/log/cron.log"]

  #### Services for dev purposes ####

  portainer:
    image: portainer/portainer-ce:latest
    restart: unless-stopped
    networks:
      - bb-net
    ports:
      - "9443:9443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  rstudio-dev:
    image: "${APP_IMAGE}"
    restart: unless-stopped
    networks:
      - bb-net
    ports:
      - "8787:8787"
    volumes:
      - .:/home/rstudio/biobuddy-dev
      # Removing the .Rprofile file in the container, so I don't activate renv
      # when I enter the project
      - /dev/null:/home/rstudio/biobuddy-dev/.Rprofile
    environment:
      ROOT: true
      # Exported as envvar in ec2-startup.sh. Locally we can just use rstudio
      # default password.
      PASSWORD: "${RSTUDIO_PASSWORD-rstudio}"
    command: ["/init"]

networks:
  bb-net:
