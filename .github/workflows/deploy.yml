name: Deploy app

on:
  workflow_dispatch:
    inputs:
      app_sha:
        description: 'Commit SHA to deploy'
        required: true
        type: string
      environment:
        description: ''
        required: true
        type: string
        options:
        - staging
        - prod

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 50

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Checkout
      run: |
        echo ${{ inputs.app_sha }}
        git checkout ${{ inputs.app_sha }}

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.12'

    - name: Install Python deps
      run: |
        python3 -m venv .venv
        . .venv/bin/activate
        python3 -m pip install -r aws/requirements.txt

    - name: Install NVM
      run: |
        curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash
        export NVM_DIR="$HOME/.nvm"
        [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
        nvm install 16

    - name: Install AWS CDK
      run: |
        export NVM_DIR="$HOME/.nvm"
        [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
        npm install -g aws-cdk
        cdk --version

    - name: Deploy app
      run: |
        export NVM_DIR="$HOME/.nvm"
        [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
        if [ "${{ inputs.environment}}" == "staging" ]; then
          make aws-stage
        else
          make aws-prod
        fi
